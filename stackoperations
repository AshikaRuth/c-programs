
#include<stdio.h>
#define MAX 5
int stack[MAX];
int top=-1;
void push(void);
void pop(void);
void display(void);
int palindrome(void);

void main ()
{
 int choice;

while (1)
{
  printf ("STACK OPERATION\n");
  printf ("\t 1.Push");
  printf ("\t 2.Pop");
  printf ("\t 3.Display"); 
  printf ("\t 4.Check Palindrome");
  printf ("\t 5.Exit");
  printf ("\n Enter your choice : ");

  scanf	("%d", &choice);
  switch (choice)
  {
   case 1: push();
          break;
   case 2: pop();
         break;
   case 3: display();
           break;
   case 4: if(palindrome()==0)
          printf("\n Stack has palindrome content\n");
else
printf("\n Stack has non-palindrome content\n");

break;
case 5: return;
default : printf ("\n Enter a valid choice");
}
}

}

/*Function to add an element from the stack*/
void push()
{
    int item;
    if(top==MAX-1)
    {
        printf("\n Stack overflow\n");
    }
    else 
    {
        printf("Enter the element to be pushed\n");
        scanf("%d",&item);
        stack[++top]=item;
    }
}
/*Function to delete an element from the stack*/
void pop()
{
    if (top==-1)
    {
        printf("\n Stack underfow\n");
        return;
    }
    else
    {
        printf("Popped elemet is %d\n",stack[top--]);
    }
}
/*Function to display the status of the stack*/
void display()
{
    int i;
    if (top==-1)
    {
        printf("\n Stack underflow\n");
        return;
    }
    else
    {
        printf("\n The elements of stack are\n");
        for(i=top;i>=0;i--)
        printf("%d\n",stack[i]);
         }
    }
    int palindrome()
    {
        int rev[MAX];
        int i,j;
        for(i=0;i<=top;i++)
        rev[i]==stack[i];
        for(i=0,j=top;i<=top;i++,j--)
        {
            if(rev[i]==stack[j])
            continue;
            else
            return -1;
        }
        return 0;
    }
